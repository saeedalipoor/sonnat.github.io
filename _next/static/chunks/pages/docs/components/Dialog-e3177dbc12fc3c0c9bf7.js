(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1854],{8986:function(t,n,e){"use strict";e.r(n),e.d(n,{default:function(){return E},meta:function(){return P}});var o=e(6265),l=e(8140),a=e(8347),r=e(7294),i=e(3905),s=e(8055),c=e(1786),d=e(9568),u=e(5893),p=e(2292),m=e(4775),h=e(7913),k=e(6383),g=e(257),b=e(3361),x=e(3782),f=e(4425),y=e(4451),v=e(1600),D=(0,f.Z)((function(t){var n=t.colors,e=t.darkMode,o=t.typography.pxToRem;return{description:{marginBottom:o(16)},accounts:{display:"flex",flexDirection:"column"},accountRow:{display:"flex",alignItems:"center",height:o(48),boxShadow:"0 1px 0 0 ".concat(n.divider),cursor:"pointer",backgroundColor:n.transparent,transition:"background-color 180ms ease","&:hover":{backgroundColor:e?"rgba(255, 255, 255, 0.04)":"rgba(0, 0, 0, 0.04)"}},avatar:{width:o(32),height:o(32),borderRadius:"50%",marginRight:o(16),backgroundColor:n.text.secondary},accountName:{display:"flex",flexDirection:"column"},addBtn:{marginTop:o(8),alignSelf:"flex-start"}}})),N=function(){var t=D(),n=r.useState(!1),e=(0,p.Z)(n,2),o=e[0],l=e[1];return(0,u.jsxs)(v.Z,{flexDirection:"column",code:'import AccountPlusO from "@sonnat/icons/AccountPlusO";\nimport Button from "@sonnat/ui/Button";\nimport Dialog, {\n  DialogActionBar,\n  DialogBody,\n  DialogHeader\n} from "@sonnat/ui/Dialog";\nimport makeStyles from "@sonnat/ui/styles/makeStyles";\nimport Text from "@sonnat/ui/Text";\nimport * as React from "react";\n\nconst useStyles = makeStyles(theme => {\n  const {\n    colors,\n    darkMode,\n    typography: { pxToRem }\n  } = theme;\n\n  return {\n    description: { marginBottom: pxToRem(16) },\n    accounts: { display: "flex", flexDirection: "column" },\n    accountRow: {\n      display: "flex",\n      alignItems: "center",\n      height: pxToRem(48),\n      boxShadow: `0 1px 0 0 ${colors.divider}`,\n      cursor: "pointer",\n      backgroundColor: colors.transparent,\n      transition: "background-color 180ms ease",\n      "&:hover": {\n        backgroundColor: darkMode\n          ? "rgba(255, 255, 255, 0.04)"\n          : "rgba(0, 0, 0, 0.04)"\n      }\n    },\n    avatar: {\n      width: pxToRem(32),\n      height: pxToRem(32),\n      borderRadius: "50%",\n      marginRight: pxToRem(16),\n      backgroundColor: colors.text.secondary\n    },\n    accountName: { display: "flex", flexDirection: "column" },\n    addBtn: { marginTop: pxToRem(8), alignSelf: "flex-start" }\n  };\n});\n\nconst Demo: React.FC = () => {\n  const classes = useStyles();\n\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Button\n        label="Toggle the Dialog"\n        onClick={() => void setDialogOpen(o => !o)}\n      />\n      <Dialog\n        onBackdropClick={() => void setDialogOpen(false)}\n        onEscapeKeyUp={() => void setDialogOpen(false)}\n        open={isDialogOpen}\n        aria-labelledby="dialog-header-0"\n        aria-describedby="dialog-body-0"\n      >\n        <DialogHeader id="dialog-header-0" title="Choose your google account" />\n        <DialogBody>\n          <Text\n            rootNode="p"\n            variant="body"\n            color="textSecondary"\n            className={classes.description}\n            id="dialog-body-0"\n          >\n            Choose one of the accounts below or add a new account:\n          </Text>\n          <div className={classes.accounts}>\n            <div className={classes.accountRow} role="button" tabIndex={0}>\n              <div className={classes.avatar}></div>\n              <div className={classes.accountName}>\n                <Text variant="subtitleSmall" rootNode="strong">\n                  Mostafa Shamsitabar\n                </Text>\n                <Text variant="caption" rootNode="strong" color="textSecondary">\n                  mostafa.sh.coderino@gmail.com\n                </Text>\n              </div>\n            </div>\n            <div className={classes.accountRow} role="button" tabIndex={0}>\n              <div className={classes.avatar}></div>\n              <div className={classes.accountName}>\n                <Text variant="subtitleSmall" rootNode="strong">\n                  Mostafa Shamsitabar\n                </Text>\n                <Text variant="caption" rootNode="strong" color="textSecondary">\n                  mostafa.sh.jobs@gmail.com\n                </Text>\n              </div>\n            </div>\n            <Button\n              className={classes.addBtn}\n              leadingIcon={<AccountPlusO />}\n              label="Add another account"\n              variant="inlined"\n            />\n          </div>\n        </DialogBody>\n        <DialogActionBar>\n          <Button\n            label="Close"\n            variant="inlined"\n            onClick={() => void setDialogOpen(false)}\n          />\n        </DialogActionBar>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default Demo;',children:[(0,u.jsx)(h.Z,{label:"Toggle the Dialog",onClick:function(){l((function(t){return!t}))}}),(0,u.jsxs)(k.Z,{onBackdropClick:function(){l(!1)},onEscapeKeyUp:function(){l(!1)},open:o,"aria-labelledby":"dialog-header-0","aria-describedby":"dialog-body-0",children:[(0,u.jsx)(g.Z,{id:"dialog-header-0",title:"Choose your google account"}),(0,u.jsxs)(b.Z,{children:[(0,u.jsx)(y.Z,{rootNode:"p",variant:"body",color:"textSecondary",className:t.description,id:"dialog-body-0",children:"Choose one of the accounts below or add a new account:"}),(0,u.jsxs)("div",{className:t.accounts,children:[(0,u.jsxs)("div",{className:t.accountRow,role:"button",tabIndex:0,children:[(0,u.jsx)("div",{className:t.avatar}),(0,u.jsxs)("div",{className:t.accountName,children:[(0,u.jsx)(y.Z,{variant:"subtitleSmall",rootNode:"strong",children:"Mostafa Shamsitabar"}),(0,u.jsx)(y.Z,{variant:"caption",rootNode:"strong",color:"textSecondary",children:"mostafa.sh.coderino@gmail.com"})]})]}),(0,u.jsxs)("div",{className:t.accountRow,role:"button",tabIndex:0,children:[(0,u.jsx)("div",{className:t.avatar}),(0,u.jsxs)("div",{className:t.accountName,children:[(0,u.jsx)(y.Z,{variant:"subtitleSmall",rootNode:"strong",children:"Mostafa Shamsitabar"}),(0,u.jsx)(y.Z,{variant:"caption",rootNode:"strong",color:"textSecondary",children:"mostafa.sh.jobs@gmail.com"})]})]}),(0,u.jsx)(h.Z,{className:t.addBtn,leadingIcon:(0,u.jsx)(m.Z,{}),label:"Add another account",variant:"inlined"})]})]}),(0,u.jsx)(x.Z,{children:(0,u.jsx)(h.Z,{label:"Close",variant:"inlined",onClick:function(){l(!1)}})})]})]})};N.displayName="BasicDialogDemo";var T=N,S=e(4886),w=e(6831),B=(0,f.Z)((function(t){var n=t.colors,e=t.darkMode,o=t.typography.pxToRem;return{description:{marginBottom:o(16)},accounts:{display:"flex",flexDirection:"column"},accountRow:{display:"flex",alignItems:"center",height:o(48),boxShadow:"0 1px 0 0 ".concat(n.divider),cursor:"pointer",backgroundColor:n.transparent,transition:"background-color 180ms ease","&:hover":{backgroundColor:e?"rgba(255, 255, 255, 0.04)":"rgba(0, 0, 0, 0.04)"}},avatar:{width:o(32),height:o(32),borderRadius:"50%",marginRight:o(16),backgroundColor:n.text.secondary},accountName:{display:"flex",flexDirection:"column"},addBtn:{marginTop:o(8),alignSelf:"flex-start"},closeBtn:{marginLeft:"auto"}}})),C=function(){var t=B(),n=r.useState(!1),e=(0,p.Z)(n,2),o=e[0],l=e[1];return(0,u.jsxs)(v.Z,{flexDirection:"column",code:'import { CloseLarge, AccountPlusO } from "@sonnat/icons";\nimport Button from "@sonnat/ui/Button";\nimport Dialog, { DialogBody, DialogHeader } from "@sonnat/ui/Dialog";\nimport makeStyles from "@sonnat/ui/styles/makeStyles";\nimport Text from "@sonnat/ui/Text";\nimport * as React from "react";\n\nconst useStyles = makeStyles(theme => {\n  const {\n    colors,\n    darkMode,\n    typography: { pxToRem }\n  } = theme;\n\n  return {\n    description: { marginBottom: pxToRem(16) },\n    accounts: { display: "flex", flexDirection: "column" },\n    accountRow: {\n      display: "flex",\n      alignItems: "center",\n      height: pxToRem(48),\n      boxShadow: `0 1px 0 0 ${colors.divider}`,\n      cursor: "pointer",\n      backgroundColor: colors.transparent,\n      transition: "background-color 180ms ease",\n      "&:hover": {\n        backgroundColor: darkMode\n          ? "rgba(255, 255, 255, 0.04)"\n          : "rgba(0, 0, 0, 0.04)"\n      }\n    },\n    avatar: {\n      width: pxToRem(32),\n      height: pxToRem(32),\n      borderRadius: "50%",\n      marginRight: pxToRem(16),\n      backgroundColor: colors.text.secondary\n    },\n    accountName: { display: "flex", flexDirection: "column" },\n    addBtn: { marginTop: pxToRem(8), alignSelf: "flex-start" },\n    closeBtn: { marginLeft: "auto" }\n  };\n});\n\nconst Demo: React.FC = () => {\n  const classes = useStyles();\n\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Button\n        label="Toggle the Dialog"\n        onClick={() => void setDialogOpen(o => !o)}\n      />\n      <Button\n        label="Toggle the Dialog"\n        onClick={() => void setDialogOpen(o => !o)}\n      />\n      <Dialog\n        fullScreen\n        onEscapeKeyUp={() => void setDialogOpen(false)}\n        open={isDialogOpen}\n        aria-labelledby="dialog-header-1"\n        aria-describedby="dialog-body-1"\n      >\n        <DialogHeader id="dialog-header-1" title="Choose your google account">\n          <Button\n            aria-label="Close the Dialog"\n            leadingIcon={<CloseLarge />}\n            variant="inlined"\n            className={classes.closeBtn}\n            onClick={() => void setDialogOpen(false)}\n          />\n        </DialogHeader>\n        <DialogBody>\n          <Text\n            rootNode="p"\n            variant="body"\n            color="textSecondary"\n            className={classes.description}\n            id="dialog-body-1"\n          >\n            Choose one of the accounts below or add a new account:\n          </Text>\n          <div className={classes.accounts}>\n            <div className={classes.accountRow} role="button" tabIndex={0}>\n              <div className={classes.avatar}></div>\n              <div className={classes.accountName}>\n                <Text variant="subtitleSmall" rootNode="strong">\n                  Mostafa Shamsitabar\n                </Text>\n                <Text variant="caption" rootNode="strong" color="textSecondary">\n                  mostafa.sh.coderino@gmail.com\n                </Text>\n              </div>\n            </div>\n            <div className={classes.accountRow} role="button" tabIndex={0}>\n              <div className={classes.avatar}></div>\n              <div className={classes.accountName}>\n                <Text variant="subtitleSmall" rootNode="strong">\n                  Mostafa Shamsitabar\n                </Text>\n                <Text variant="caption" rootNode="strong" color="textSecondary">\n                  mostafa.sh.jobs@gmail.com\n                </Text>\n              </div>\n            </div>\n            <Button\n              className={classes.addBtn}\n              leadingIcon={<AccountPlusO />}\n              label="Add another account"\n              variant="inlined"\n            />\n          </div>\n        </DialogBody>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default Demo;',children:[(0,u.jsx)(h.Z,{label:"Toggle the Dialog",onClick:function(){l((function(t){return!t}))}}),(0,u.jsxs)(k.Z,{fullScreen:!0,onEscapeKeyUp:function(){l(!1)},open:o,"aria-labelledby":"dialog-header-1","aria-describedby":"dialog-body-1",children:[(0,u.jsx)(g.Z,{id:"dialog-header-1",title:"Choose your google account",children:(0,u.jsx)(h.Z,{"aria-label":"Close the Dialog",leadingIcon:(0,u.jsx)(S.Z,{}),variant:"inlined",className:t.closeBtn,onClick:function(){l(!1)}})}),(0,u.jsxs)(b.Z,{children:[(0,u.jsx)(y.Z,{rootNode:"p",variant:"body",color:"textSecondary",className:t.description,id:"dialog-body-1",children:"Choose one of the accounts below or add a new account:"}),(0,u.jsxs)("div",{className:t.accounts,children:[(0,u.jsxs)("div",{className:t.accountRow,role:"button",tabIndex:0,children:[(0,u.jsx)("div",{className:t.avatar}),(0,u.jsxs)("div",{className:t.accountName,children:[(0,u.jsx)(y.Z,{variant:"subtitleSmall",rootNode:"strong",children:"Mostafa Shamsitabar"}),(0,u.jsx)(y.Z,{variant:"caption",rootNode:"strong",color:"textSecondary",children:"mostafa.sh.coderino@gmail.com"})]})]}),(0,u.jsxs)("div",{className:t.accountRow,role:"button",tabIndex:0,children:[(0,u.jsx)("div",{className:t.avatar}),(0,u.jsxs)("div",{className:t.accountName,children:[(0,u.jsx)(y.Z,{variant:"subtitleSmall",rootNode:"strong",children:"Mostafa Shamsitabar"}),(0,u.jsx)(y.Z,{variant:"caption",rootNode:"strong",color:"textSecondary",children:"mostafa.sh.jobs@gmail.com"})]})]}),(0,u.jsx)(h.Z,{className:t.addBtn,leadingIcon:(0,u.jsx)(w.Z,{}),label:"Add another account",variant:"inlined"})]})]})]})]})};C.displayName="FullScreenDialogDemo";var j=C,R=e(9008),Z=e(4069),O=e(7210);function A(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,o)}return e}function I(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?A(Object(e),!0).forEach((function(n){(0,o.Z)(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):A(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}var P={title:"Dialog",description:"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks.",getLayout:function(){return function(t){return(0,i.kt)(d.Z,{mdxType:"WithSidebar"},t)}}},M={meta:P};function E(t){var n=t.components,e=(0,a.Z)(t,["components"]);return(0,i.kt)("wrapper",I(I(I({},M),e),{},{components:n,mdxType:"MDXLayout"}),(0,i.kt)(R.default,{mdxType:"Head"},(0,O.aT)("".concat(P.title," | Sonnat Developer Tools, React Components & Resources")),(0,O.u2)(P.description),(0,O.ai)("".concat(Z.z,"/docs/components/").concat(P.title)),(0,O.hL)([].concat((0,l.Z)(Z.t),["Dialog"]))),(0,i.kt)("h1",null,(0,i.kt)("span",null,P.title),(0,i.kt)(c.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,i.kt)(s.Z,{href:"pages/docs/components/".concat(P.title,".mdx"),mdxType:"PageEditButton"})),(0,i.kt)("p",null,P.description),(0,i.kt)("p",null,"Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken.",(0,i.kt)("br",null),"Dialogs are purposefully interruptive, so they should be used sparingly."),(0,i.kt)("p",null,"Sonnat's Dialogs are fully customizable. We have implemented the basic features so you can add your own features without any problem / overriding hells."),(0,i.kt)("p",null,"Dialogs have a maxHeight of ",(0,i.kt)("inlineCode",null,"70vh"),". If the height exceeds the maxHeight value it will automatically make the UI scrollable and also will add some elevation to the Header and the ActionBar."),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Basic Dialog"),(0,i.kt)(c.Z,{anchorId:"basic-dialog",mdxType:"AnchorButton"})),(0,i.kt)(T,{mdxType:"BasicDialogDemo"}),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Fullscreen Dialog"),(0,i.kt)(c.Z,{anchorId:"fullscreen-dialog",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"To have a fullscreen dialog, use the ",(0,i.kt)("inlineCode",null,"fullScreen")," ","property."),(0,i.kt)(j,{mdxType:"FullScreenDialogDemo"}),(0,i.kt)("h2",null,(0,i.kt)("span",null,"API"),(0,i.kt)(c.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Learn more about the properties and the customization points."),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Usage"),(0,i.kt)(c.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,i.kt)("pre",null,(0,i.kt)("code",I({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Dialog, {\n  DialogHeader,\n  DialogBody,\n  DialogActionBar\n} from "@sonnat/ui/Dialog";\n\n//or\nimport { Dialog, DialogHeader, DialogBody, DialogActionBar } from "@sonnat/ui";\n')),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Properties"),(0,i.kt)(c.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"Dialog")," Properties"),(0,i.kt)(c.Z,{anchorId:"parent-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"Dialog Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"children"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The content of the component.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"maxWidth"),(0,i.kt)("td",null,"number"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"A number in pixels which determines the `max-width` of the dialog.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"fullScreen"),(0,i.kt)("td",null,"boolean"),(0,i.kt)("td",null,"false"),(0,i.kt)("td",null,"If ",(0,i.kt)("inlineCode",null,"true"),", the dialog will be full-screen.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"open"),(0,i.kt)("td",null,"boolean"),(0,i.kt)("td",null,"false"),(0,i.kt)("td",null,"If ",(0,i.kt)("inlineCode",null,"true"),", the dialog will be open.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onOpen"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The Callback fires when the dialog has opened.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onClose"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The Callback fires when the dialog has closed.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onBackdropClick"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Callback fired when the backdrop is clicked.",(0,i.kt)("br",null),(0,i.kt)("em",null,(0,i.kt)("strong",null,"Signature:"))," ",(0,i.kt)("inlineCode",null,"function(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void"))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onEscapeKeyUp"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Callback fired when the ",(0,i.kt)("inlineCode",null,"Escape")," key is released.",(0,i.kt)("br",null),(0,i.kt)("em",null,(0,i.kt)("strong",null,"Signature:"))," ",(0,i.kt)("inlineCode",null,"function(event: KeyboardEvent) => void")))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"DialogHeader")," Properties"),(0,i.kt)(c.Z,{anchorId:"dialog-header-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"DialogHeader Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"children"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The content of the component.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"title"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The title to display in the header."))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"DialogBody")," Properties"),(0,i.kt)(c.Z,{anchorId:"dialog-body-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"DialogBody Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"children"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The content of the component.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles."))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"DialogActionBar")," Properties"),(0,i.kt)(c.Z,{anchorId:"dialog-actionbar-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"DialogActionBar Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"children"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The content of the component.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles."))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}E.isMDXComponent=!0},9474:function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Dialog",function(){return e(8986)}])}},function(t){t.O(0,[7897,8577,5725,9774,2888,179],(function(){return n=9474,t(t.s=n);var n}));var n=t.O();_N_E=n}]);