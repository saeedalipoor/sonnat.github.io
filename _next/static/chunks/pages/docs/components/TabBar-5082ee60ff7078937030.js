(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8030],{9995:function(t,n,e){"use strict";e.r(n),e.d(n,{default:function(){return X},meta:function(){return L}});var l=e(2809),a=e(7841),o=e(3464),r=e(7294),i=e(3905),c=e(8055),b=e(1786),u=e(9568),d=e(5893),s=e(9961),h=e(4425),T=e(3647),k=e(5293),p=e(1600),f="TabSimpleScrollableDemo",m=(0,h.Z)((function(t){return{tabPanel:{width:"100%",borderTop:"1px solid ".concat(t.colors.divider),paddingTop:t.typography.pxToRem(16)}}}),{name:f}),v={0:"The content of First Tab!",1:"The content of Second Tab!",2:"The content of Third Tab!",3:"The content of Fourth Tab!",4:"The content of Fifth Tab!",5:"The content of Sixth Tab!",6:"The content of Seventh Tab!"},x=function(){var t=m(),n=r.useState(0),e=(0,s.Z)(n,2),l=e[0],a=e[1];return(0,d.jsx)(p.Z,{code:'import TabBar, { Tab } from "@sonnat/ui/TabBar";\nimport * as React from "react";\n\nconst defaultActiveTab = 0;\nconst content = {\n  0: "The content of First Tab!",\n  1: "The content of Second Tab!",\n  2: "The content of Third Tab!",\n  3: "The content of Fourth Tab!",\n  4: "The content of Fifth Tab!",\n  5: "The content of Sixth Tab!",\n  6: "The content of Seventh Tab!"\n};\n\nconst TabSimpleScrollableDemo: React.FC = () => {\n  const [activeTab, setActiveTab] = React.useState(defaultActiveTab);\n\n  return (\n    <React.Fragment>\n      <TabBar\n        defaultActiveTab={defaultActiveTab}\n        onChange={(_, identifier) => void setActiveTab(identifier)}\n      >\n        <Tab label="First tab" />\n        <Tab label="Second tab" />\n        <Tab label="Third tab" />\n        <Tab label="Fourth tab" />\n        <Tab label="Fifth tab" />\n        <Tab label="Sixth tab" />\n        <Tab label="Seventh tab" />\n      </TabBar>\n      <div><small>{content[activeTab]}</small></div>\n    </React.Fragment>\n  );\n};\n\nexport default TabSimpleScrollableDemo;\n',children:(0,d.jsxs)(r.Fragment,{children:[(0,d.jsxs)(T.Z,{defaultActiveTab:0,onChange:function(t,n){a(n)},children:[(0,d.jsx)(k.Z,{label:"First tab"}),(0,d.jsx)(k.Z,{label:"Second tab"}),(0,d.jsx)(k.Z,{label:"Third tab"}),(0,d.jsx)(k.Z,{label:"Fourth tab"}),(0,d.jsx)(k.Z,{label:"Fifth tab"}),(0,d.jsx)(k.Z,{label:"Sixth tab"}),(0,d.jsx)(k.Z,{label:"Seventh tab"})]}),(0,d.jsx)("div",{className:t.tabPanel,children:(0,d.jsx)("small",{children:v[l]})})]})})};x.displayName=f;var y=x,g="TabSimpleFluidDemo",j=(0,h.Z)((function(t){return{tabPanel:{width:"100%",borderTop:"1px solid ".concat(t.colors.divider),paddingTop:t.typography.pxToRem(16)}}}),{name:g}),Z={0:"The content of First Tab!",1:"The content of Second Tab!",2:"The content of Third Tab!"},S=function(){var t=j(),n=r.useState(0),e=(0,s.Z)(n,2),l=e[0],a=e[1];return(0,d.jsx)(p.Z,{code:'import TabBar, { Tab } from "@sonnat/ui/TabBar";\nimport * as React from "react";\n\nconst defaultActiveTab = 0;\nconst content = {\n  0: "The content of First Tab!",\n  1: "The content of Second Tab!",\n  2: "The content of Third Tab!",\n};\n\nconst TabSimpleFluidDemo: React.FC = () => {\n  const [activeTab, setActiveTab] = React.useState(defaultActiveTab);\n\n  return (\n    <React.Fragment>\n      <TabBar\n        variant="fluid"\n        defaultActiveTab={defaultActiveTab}\n        onChange={(_, identifier) => void setActiveTab(identifier)}\n      >\n        <Tab label="First tab" />\n        <Tab label="Second tab" />\n        <Tab label="Third tab" />\n      </TabBar>\n      <div><small>{content[activeTab]}</small></div>\n    </React.Fragment>\n  );\n};\n\nexport default TabSimpleFluidDemo;\n',children:(0,d.jsxs)(r.Fragment,{children:[(0,d.jsxs)(T.Z,{variant:"fluid",defaultActiveTab:0,onChange:function(t,n){a(n)},children:[(0,d.jsx)(k.Z,{label:"First tab"}),(0,d.jsx)(k.Z,{label:"Second tab"}),(0,d.jsx)(k.Z,{label:"Third tab"})]}),(0,d.jsx)("div",{className:t.tabPanel,children:(0,d.jsx)("small",{children:Z[l]})})]})})};S.displayName=g;var F=S,w=e(4101),A=e(8286),B=function(){return(0,d.jsx)(p.Z,{code:'<TabBar>\n  <Tab label="Tab 1" {<Heart />} />\n  <Tab label="Tab 2" icon={<Heart />} />\n  <Tab label="Tab 3" icon={<Heart />} />\n</TabBar>\n<TabBar>\n  <Tab icon={<Heart />} />\n  <Tab icon={<Heart />} />\n  <Tab icon={<Heart />} />\n</TabBar>',children:(0,d.jsxs)(r.Fragment,{children:[(0,d.jsxs)(T.Z,{children:[(0,d.jsx)(k.Z,{label:"Tab 1",icon:(0,d.jsx)(w.Z,{})}),(0,d.jsx)(k.Z,{label:"Tab 2",icon:(0,d.jsx)(w.Z,{})}),(0,d.jsx)(k.Z,{label:"Tab 3",icon:(0,d.jsx)(w.Z,{})})]}),(0,d.jsx)(A.Z,{spaced:!0}),(0,d.jsxs)(T.Z,{children:[(0,d.jsx)(k.Z,{icon:(0,d.jsx)(w.Z,{})}),(0,d.jsx)(k.Z,{icon:(0,d.jsx)(w.Z,{})}),(0,d.jsx)(k.Z,{icon:(0,d.jsx)(w.Z,{})})]})]})})};B.displayName="TabWithIconsDemo";var C=B,D="TabControllingDemo",P=(0,h.Z)((function(t){return{tabPanel:{width:"100%",borderTop:"1px solid ".concat(t.colors.divider),paddingTop:t.typography.pxToRem(16)}}}),{name:D}),R={0:"The content of First Tab!",1:"The content of Second Tab!",2:"The content of Third Tab!",3:"The content of Fourth Tab!",4:"The content of Fifth Tab!",5:"The content of Sixth Tab!",6:"The content of Seventh Tab!"},N=function(){var t=P(),n=r.useState(0),e=(0,s.Z)(n,2),l=e[0],a=e[1];return(0,d.jsx)(p.Z,{code:'import TabBar, { Tab } from "@sonnat/ui/TabBar";\nimport * as React from "react";\n\nconst defaultActiveTab = 0;\nconst content = {\n  0: "The content of First Tab!",\n  1: "The content of Second Tab!",\n  2: "The content of Third Tab!",\n  3: "The content of Fourth Tab!",\n  4: "The content of Fifth Tab!",\n  5: "The content of Sixth Tab!",\n  6: "The content of Seventh Tab!"\n};\n\nconst TabControllingDemo: React.FC = () => {\n  const [activeTab, setActiveTab] = React.useState(defaultActiveTab);\n\n  return (\n    <React.Fragment>\n      <TabBar\n        activeTab={activeTab}\n        onChange={(_, identifier) => void setActiveTab(identifier)}\n      >\n        <Tab label="First tab" />\n        <Tab label="Second tab" />\n        <Tab label="Third tab" />\n        <Tab label="Fourth tab" />\n        <Tab label="Fifth tab" />\n        <Tab label="Sixth tab" />\n        <Tab label="Seventh tab" />\n      </TabBar>\n      <div><small>{content[activeTab]}</small></div>\n    </React.Fragment>\n  );\n};\n\nexport default TabControllingDemo;\n',children:(0,d.jsxs)(r.Fragment,{children:[(0,d.jsxs)(T.Z,{activeTab:l,onChange:function(t,n){a(n)},children:[(0,d.jsx)(k.Z,{label:"First tab"}),(0,d.jsx)(k.Z,{label:"Second tab"}),(0,d.jsx)(k.Z,{label:"Third tab"}),(0,d.jsx)(k.Z,{label:"Fourth tab"}),(0,d.jsx)(k.Z,{label:"Fifth tab"}),(0,d.jsx)(k.Z,{label:"Sixth tab"}),(0,d.jsx)(k.Z,{label:"Seventh tab"})]}),(0,d.jsx)("div",{className:t.tabPanel,children:(0,d.jsx)("small",{children:R[l]})})]})})};N.displayName=D;var O=N,I=e(9008),_=e(4069),E=e(7210);function H(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,l)}return e}function z(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?H(Object(e),!0).forEach((function(n){(0,l.Z)(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):H(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}var L={title:"TabBar",description:"Tabs make it easy to explore and switch between different views.",getLayout:function(){return function(t){return(0,i.kt)(u.Z,{mdxType:"WithSidebar"},t)}}},W={meta:L};function X(t){var n=t.components,e=(0,o.Z)(t,["components"]);return(0,i.kt)("wrapper",z(z(z({},W),e),{},{components:n,mdxType:"MDXLayout"}),(0,i.kt)(I.default,{mdxType:"Head"},(0,E.aT)("".concat(L.title," | Sonnat Developer Tools, React Components & Resources")),(0,E.u2)(L.description),(0,E.ai)("".concat(_.z,"/docs/components/").concat(L.title)),(0,E.hL)([].concat((0,a.Z)(_.t),["tabs","tab","tabbar","tab bar","\u062a\u0628"]))),(0,i.kt)("h1",null,(0,i.kt)("span",null,L.title),(0,i.kt)(b.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,i.kt)(c.Z,{href:"pages/docs/components/".concat(L.title,".mdx"),mdxType:"PageEditButton"})),(0,i.kt)("p",null,L.description),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Scrollable Tabs"),(0,i.kt)(b.Z,{anchorId:"scrollable-tabs",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"A simple uncontrolled scrollable example:"),(0,i.kt)(y,{mdxType:"TabSimpleScrollableDemo"}),(0,i.kt)("p",null,"You can force the left and right scroll buttons to be hidden by setting"," ",(0,i.kt)("inlineCode",null,"scrollHandleVisibility")," property to"," ",(0,i.kt)("inlineCode",null,"'off'"),". (the default value is"," ",(0,i.kt)("inlineCode",null,"'auto'")," which will automatically show these buttons on overflow)"),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Fluid Tabs"),(0,i.kt)(b.Z,{anchorId:"fluid-tabs",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"A simple uncontrolled fluid example:"),(0,i.kt)(F,{mdxType:"TabSimpleFluidDemo"}),(0,i.kt)("p",null,"Fluid tabs should be used with a fixed limited number of tabs and when consistent placement will aid muscle memory."),(0,i.kt)("h2",null,(0,i.kt)("span",null,"With Icons"),(0,i.kt)(b.Z,{anchorId:"with-icons",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"To provide icon to the tabs use ",(0,i.kt)("inlineCode",null,"icon")," property on the"," ",(0,i.kt)("mark",null,"TabBar/Tab")," components."),(0,i.kt)(C,{mdxType:"TabWithIconsDemo"}),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Controlled Tabs"),(0,i.kt)(b.Z,{anchorId:"controlled-tabs",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("inlineCode",null,"activeTab"),", and"," ",(0,i.kt)("inlineCode",null,"onChange")," properties to control the behaviour of the tabs."),(0,i.kt)(O,{mdxType:"TabControllingDemo"}),(0,i.kt)("h2",null,(0,i.kt)("span",null,"API"),(0,i.kt)(b.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Learn more about the properties and the customization points."),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Usage"),(0,i.kt)(b.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,i.kt)("pre",null,(0,i.kt)("code",z({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport TabBar, { Tab } from "@sonnat/ui/TabBar";\n\n//or\nimport { TabBar, Tab } from "@sonnat/ui";\n')),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Properties"),(0,i.kt)(b.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"TabBar")," Properties"),(0,i.kt)(b.Z,{anchorId:"parent-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"TabBar Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"children"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The content of the tabbar.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"activeTab"),(0,i.kt)("td",null,"number | string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The currently selected tab.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"defaultActiveTab"),(0,i.kt)("td",null,"number | string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The default selected tab. Use when the tabbar is not controlled.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"scrollHandleVisibility"),(0,i.kt)("td",null,'"auto" | "off"'),(0,i.kt)("td",null,'"auto"'),(0,i.kt)("td",null,"Determines the behavior of scroll buttons when"," ",(0,i.kt)("inlineCode",null,'variant="scrollable"')," :",(0,i.kt)("br",null),"-"," ",(0,i.kt)("inlineCode",null,'"auto"')," will automatically show them on overflow.",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",null,'"off"')," won't show them.",(0,i.kt)("br",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"variant"),(0,i.kt)("td",null,'"scrollable"',(0,i.kt)("br",null),'| "fluid"'),(0,i.kt)("td",null,'"scrollable"'),(0,i.kt)("td",null,"The variant of the tabbar.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"size"),(0,i.kt)("td",null,'"large"',(0,i.kt)("br",null),'| "medium"',(0,i.kt)("br",null),'| "small"'),(0,i.kt)("td",null,'"large"'),(0,i.kt)("td",null,"The size of the tabbar.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onChange"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The callback fires when the state has changed.",(0,i.kt)("br",null),(0,i.kt)("em",null,(0,i.kt)("strong",null,"Signature:"))," ",(0,i.kt)("inlineCode",null,"function(event: React.SyntheticEvent | Event, identifier: number | string) => void")))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))),(0,i.kt)("h4",null,(0,i.kt)("span",null,(0,i.kt)("mark",null,"TabBar/Tab")," Properties"),(0,i.kt)(b.Z,{anchorId:"tabbar-tab-properties",mdxType:"AnchorButton"})),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"TabBar/Tab Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"label"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The label of the tab.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"icon"),(0,i.kt)("td",null,"node"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The leading icon element placed before the label.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"identifier"),(0,i.kt)("td",null,"number | string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"A unique identifier for the tab.",(0,i.kt)("br",null),"If not provided the index of the tab (which is zero-base) will be considered as the identifier.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"onClick"),(0,i.kt)("td",null,"function"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"The callback fires when the tab has been clicked.",(0,i.kt)("br",null),(0,i.kt)("em",null,(0,i.kt)("strong",null,"Signature:"))," ",(0,i.kt)("inlineCode",null,"function(event: React.MouseEvent, identifier: number | string) => void")))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}X.isMDXComponent=!0},1917:function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/TabBar",function(){return e(9995)}])}},function(t){t.O(0,[2423,5116,4303,5725,9774,2888,179],(function(){return n=1917,t(t.s=n);var n}));var n=t.O();_N_E=n}]);